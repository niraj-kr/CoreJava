//java.lang.package
->for writing any java program whether it is simple or complex the most commonly required classes and interfaces are grouped into a seperate package 
 which is nothing but java.lang.package
->We are not required to import java.lang package explicitly because all classes and interfaces present lang package by default availaible to every java program.
-> The most commonly required methods for every java class (whether it is predefined class or customized class ) are defined in a seperate class which is noting 
but object class.
-> Every class in java is the child class of object either directly or indirectly so that object class method by default availaible to every java class.
Hence Object class is considered as root of all java classes
NOTE: if our class doesn't extend any other class then only our class is the direct child class of object.
eg. class A{
	
}//A is the child of Object

conclusion : either direclty or indirectly java won't provide support for multiple inheritence wrt classes
class A etxends B{
	
}
//(X)here A is child of B and B is the child of Object i.e, A is indirectly child of object 
that is we called multilevel inheritence.

Object class defines the following 11 methods:- 
	public String toString()
	public native int hashCode()
	public boolean equals(Object o)
	protected native Object clone() throws CloneNotSupportedException
	protected void finalize() throws Throwable
	public final class getClass()
	public final void wait() throws InterruptedException
	public final native void wait(long ms) throws InterruptedException
	public final void wait (long ms,int ns) throws InterruptedException
	public native final void notify()
	public native final void notifyAll()